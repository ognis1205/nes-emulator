/*
 * NesDev:
 * Emulator for the Nintendo Entertainment System (R) Archetecture.
 * Written by and Copyright (C) 2020 Shingo OKAWA shingo.okawa.g.h.c@gmail.com
 * Trademarks are owned by their respect owners.
 */
#ifndef _NESDEV_CORE_TEST_CONSTANTS_H_
#define _NESDEV_CORE_TEST_CONSTANTS_H_
#include <bitset>
#include <iomanip>
#include <sstream>
#include <gmock/gmock.h>
#include <gtest/gtest.h>

namespace nesdev {
namespace core {
namespace test {

struct Op {
  std::string inst;
  std::string addr;
  uint8_t cycles = 0;
};

static const std::vector<Op> kOpcodes = {
  {"BRK", "IMP", 7},
  {"ORA", "IZX", 6},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"ORA", "ZP0", 3},
  {"ASL", "ZP0", 5},
  {"???", "IMP", 0},
  {"PHP", "IMP", 3},
  {"ORA", "IMM", 2},
  {"ASL", "ACC", 2},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"ORA", "ABS", 4},
  {"ASL", "ABS", 6},
  {"???", "IMP", 0},

  {"BPL", "REL", 2},
  {"ORA", "IZY", 5},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"ORA", "ZPX", 4},
  {"ASL", "ZPX", 6},
  {"???", "IMP", 0},
  {"CLC", "IMP", 2},
  {"ORA", "ABY", 4},
  {"INC", "ACC", 2}, // ***65C02-***
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"ORA", "ABX", 4},
  {"ASL", "ABX", 7},
  {"???", "IMP", 0},

  {"JSR", "ABS", 6},
  {"AND", "IZX", 6},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"BIT", "ZP0", 3},
  {"AND", "ZP0", 3},
  {"ROL", "ZP0", 5},
  {"???", "IMP", 0},
  {"PLP", "IMP", 4},
  {"AND", "IMM", 2},
  {"ROL", "ACC", 2},
  {"???", "IMP", 0},
  {"BIT", "ABS", 4},
  {"AND", "ABS", 4},
  {"ROL", "ABS", 6},
  {"???", "IMP", 0},

  {"BMI", "REL", 2},
  {"AND", "IZY", 5},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"AND", "ZPX", 4},
  {"ROL", "ZPX", 6},
  {"???", "IMP", 0},
  {"SEC", "IMP", 2},
  {"AND", "ABY", 4},
  {"DEC", "ACC", 2}, // ***65C02-***
  {"???", "IMP", 0},
  {"BIT", "ABX", 5}, // ***65C02-***
  {"AND", "ABX", 4},
  {"ROL", "ABX", 7},
  {"???", "IMP", 0},

  {"RTI", "IMP", 6},
  {"EOR", "IZX", 6},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"EOR", "ZP0", 3},
  {"LSR", "ZP0", 5},
  {"???", "IMP", 0},
  {"PHA", "IMP", 3},
  {"EOR", "IMM", 2},
  {"LSR", "ACC", 2},
  {"???", "IMP", 0},
  {"JMP", "ABS", 3},
  {"EOR", "ABS", 4},
  {"LSR", "ABS", 6},
  {"???", "IMP", 0},
  {"BVC", "REL", 2},

  {"EOR", "IZY", 5},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"EOR", "ZPX", 4},
  {"LSR", "ZPX", 6},
  {"???", "IMP", 0},
  {"CLI", "IMP", 2},
  {"EOR", "ABY", 4},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"EOR", "ABX", 4},
  {"LSR", "ABX", 7},
  {"???", "IMP", 0},
  {"RTS", "IMP", 6},

  {"ADC", "IZX", 6},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"ADC", "ZP0", 3},
  {"ROR", "ZP0", 5},
  {"???", "IMP", 0},
  {"PLA", "IMP", 4},
  {"ADC", "IMM", 2},
  {"ROR", "ACC", 2},
  {"???", "IMP", 0},
  {"JMP", "IND", 5},
  {"ADC", "ABS", 4},
  {"ROR", "ABS", 6},
  {"???", "IMP", 0},
  {"BVS", "REL", 2},

  {"ADC", "IZY", 5},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"ADC", "ZPX", 4},
  {"ROR", "ZPX", 6},
  {"???", "IMP", 0},
  {"SEI", "IMP", 2},
  {"ADC", "ABY", 4},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"ADC", "ABX", 4},
  {"ROR", "ABX", 7},
  {"???", "IMP", 0},
  {"???", "IMP", 0},

  {"STA", "IZX", 6},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"STY", "ZP0", 3},
  {"STA", "ZP0", 3},
  {"STX", "ZP0", 3},
  {"???", "IMP", 0},
  {"DEY", "IMP", 2},
  {"BIT", "IMM", 2}, // ***65C02-***
  {"TXA", "IMP", 2},
  {"???", "IMP", 0},
  {"STY", "ABS", 4},
  {"STA", "ABS", 4},
  {"STX", "ABS", 4},
  {"???", "IMP", 0},
  {"BCC", "REL", 2},

  {"STA", "IZY", 6},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"STY", "ZPX", 4},
  {"STA", "ZPX", 4},
  {"STX", "ZPY", 4},
  {"???", "IMP", 0},
  {"TYA", "IMP", 2},
  {"STA", "ABY", 5},
  {"TXS", "IMP", 2},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"STA", "ABX", 5},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"LDY", "IMM", 2},

  {"LDA", "IZX", 6},
  {"LDX", "IMM", 2},
  {"???", "IMP", 0},
  {"LDY", "ZP0", 3},
  {"LDA", "ZP0", 3},
  {"LDX", "ZP0", 3},
  {"???", "IMP", 0},
  {"TAY", "IMP", 2},
  {"LDA", "IMM", 2},
  {"TAX", "IMP", 2},
  {"???", "IMP", 0},
  {"LDY", "ABS", 4},
  {"LDA", "ABS", 4},
  {"LDX", "ABS", 4},
  {"???", "IMP", 0},
  {"BCS", "REL", 2},

  {"LDA", "IZY", 5},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"LDY", "ZPX", 4},
  {"LDA", "ZPX", 4},
  {"LDX", "ZPY", 4},
  {"???", "IMP", 0},
  {"CLV", "IMP", 2},
  {"LDA", "ABY", 4},
  {"TSX", "IMP", 2},
  {"???", "IMP", 0},
  {"LDY", "ABX", 4},
  {"LDA", "ABX", 4},
  {"LDX", "ABY", 4},
  {"???", "IMP", 0},
  {"CPY", "IMM", 2},

  {"CMP", "IZX", 6},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"CPY", "ZP0", 3},
  {"CMP", "ZP0", 3},
  {"DEC", "ZP0", 5},
  {"???", "IMP", 0},
  {"INY", "IMP", 2},
  {"CMP", "IMM", 2},
  {"DEX", "IMP", 2},
  {"???", "IMP", 0},
  {"CPY", "ABS", 4},
  {"CMP", "ABS", 4},
  {"DEC", "ABS", 6},
  {"???", "IMP", 0},

  {"BNE", "REL", 2},
  {"CMP", "IZY", 5},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"CMP", "ZPX", 4},
  {"DEC", "ZPX", 6},
  {"???", "IMP", 0},
  {"CLD", "IMP", 2},
  {"CMP", "ABY", 4},
  {"???", "IMP", 0},
//    {"NOP", "IMP", 2}, // Check OLC implementation.
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"CMP", "ABX", 4},
  {"DEC", "ABX", 7},
  {"???", "IMP", 0},

  {"CPX", "IMM", 2},
  {"SBC", "IZX", 6},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"CPX", "ZP0", 3},
  {"SBC", "ZP0", 3},
  {"INC", "ZP0", 5},
  {"???", "IMP", 0},
  {"INX", "IMP", 2},
  {"SBC", "IMM", 2},
  {"NOP", "IMP", 2},
  {"???", "IMP", 0},
  {"CPX", "ABS", 4},
  {"SBC", "ABS", 4},
  {"INC", "ABS", 6},
  {"???", "IMP", 0},

  {"BEQ", "REL", 2},
  {"SBC", "IZY", 5},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"SBC", "ZPX", 4},
  {"INC", "ZPX", 6},
  {"???", "IMP", 0},
  {"SED", "IMP", 2},
  {"SBC", "ABY", 4},
  {"???", "IMP", 0},
//    {"NOP", "IMP", 2}, // Check OLC implementation.
  {"???", "IMP", 0},
  {"???", "IMP", 0},
  {"SBC", "ABX", 4},
  {"INC", "ABX", 7},
  {"???", "IMP", 0},
};

}  // namespace test
}  // namespace core
}  // namespace nesdev

#endif  // ifndef _NESDEV_CORE_TEST_CONSTANTS_H_
